@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject AuthenticationStateProvider _AuthenticationStateProvider

@using Ecouz_Blazor.Utility

<div class="page">

    <AuthorizeView Roles="@SD.Role_Admin">
        <div class="sidebar">
            <NavMenu />
        </div>
    </AuthorizeView>
    
    <main>
        @if (_navBarVisible)
        {
            <NavBar></NavBar>
        }

            @Body
        <footer class="border-top footer text-muted mt-auto py-3">
            <div class="text-center">
                Made with <i class="bi bi-heart-fill" style="color:red"></i> by Ecouz &copy; 2024 -
            </div>
        </footer>
    </main>
</div>

    <div id="blazor-error-ui">
        An unhandled error has occurred.
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>


@code {
    private bool _navBarVisible;
    protected override async Task OnInitializedAsync()
    {
        _navBarVisible = await ShowNavBar();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        _navBarVisible = await ShowNavBar();
    }

    private async Task<bool> ShowNavBar()
    {
        var authState = await _AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var authenticated = user.Identity is not null && user.Identity.IsAuthenticated;

        if (!authenticated)
        {
            return true;
        }

        //Navbar should not be displayed to admin user
        if (!user.IsInRole(SD.Role_Admin))
        {
            return true;
        }
        return false;
    }
}